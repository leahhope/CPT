import random

def setup():
    size(1000,600)
    frameRate(10)
    highScore = 0

def draw():
    background(0)
    drawScoreboard()
        
def drawScoreboard():
    fill(255)
    textSize(50)
    text("Snake Game", width/3, 80)
    fill(250, 0, 250)
    textSize(20)
    
    #draw scoreboard
    stroke(255)
    fill(255)
    textSize(17)
    text("Score: " , 70, 50)
    
    fill(255)
    textSize(17)
    text("High Score: ",70, 70)

def draw_snake():
    fill(127,255,0)
    rect(25, 25)
    
def draw_food():
    noStroke
    fill(255,0,0)
    ellipse(25, 25, 20, 20)
    
segments = []

def keyPressed():
    global space_pressed, up_pressed
    print(keyCode)
    if keyCode == 32:  # space keycode is 32
        space_pressed = True
    elif keyCode == 38:  # up arrow
        up_pressed = True
    

#main game loop
while True:
    #check for collison with the border
    if snake.xcord()>1000 or snake.xcord()<-1000 or snake.ycord()>600 or snake.ycord()<-600:
        
    #The segments
    for segment in segments:
        segemnt.goto(1000,1000)
        
    #clear segement list
    segments.clear()
    
    #reset the score
    score = 0
    
    #reset the delay
    speed = 0.1
    
    text("Score:{} High Score: {}".format(score, high_score,)
         
    #Check for a collision with the food
    if snake.distance(food) < 20:
        #move the food to a random spot
        x = random.randit(-290, 290)
        y = random.randit(-290, 290)
        food.goto(x,y)
        
        #add a segment
    def draw_segment():
        fill(127,255,0)
        rect(segement_x, segment_y, 25, 25))
        segements.append(new_segment)
        
        #increase the score
        score += 10
        
        if score > high_score:
            high_score = score
            
        text.clear
        stroke(255)
        fill(255)
        textSize(17)
        text("Score: " , 70, 50)
    
        fill(255)
        textSize(17)
        text("High Score: ",70, 70)
        
    #move the end segments first in reverse order
    for index in range(len(segments)-1, 0, -1):
        x = segements[index-1].xcor()
        y = segements[index-1].ycor()
        segements[index].goto(x,y)
        
    #move segment 0 to where the head is
    if len(segments) > 0:
        x = snake.xcor()
        y = snake.ycor()
        segments[0].goto(x,y0
                         
    move()
    
    #check for collision with the body
    for segment in segments:
        if segemnt.distance(head) < 20:
            head.goto(0,0)
            
            #hide the segments
            for segment in segments:
                segment.goto(1000,1000)
                
            #clear the segements list
            segmens.clear()
            
            #reset the score
            score = 0
            
            #update the score
             text.clear
            stroke(255)
            fill(255)
            textSize(17)
            text("Score: " , 70, 50)
    
            fill(255)
            textSize(17)
            text("High Score: ",70, 70)
            
            
mainloop()
